;Comments to the syntax file can be inputted by
;using a ; at the BEGINNING of each line...
;Blank spaces are ignored...

;--------------------------------------------------------
;                          COMMENTS
;--------------------------------------------------------
;Set different comment styles to SingleLine
;If it's a MultiLine comment, then use the
;MultiLineStart= and MultiLineEnd keywords
;to set that info.  For example:

;MultiLineStart=/*
;MultiLineEnd=*/

;This syntax ONLY applies for the comment section...

[Comments]
SingleLine=#

MultiLineStart=/*
MultiLineEnd=*/

;--------------------------------------------------------
;                   STRING DELIMITER
;--------------------------------------------------------
;This sets the string delimiter...
;A VB example would be:

;SomeString = "Hello there!"

;The double quotes enclose a string...
[String Delim]
"

;--------------------------------------------------------
;                               BLOCK
;--------------------------------------------------------
[Block]
}
{
/}
/{
\}
\{

;--------------------------------------------------------
;                          OPERATORS
;--------------------------------------------------------
[Operators]
+
-
>
<
<=
>=
=>
=<
<>
==
=
/
*

;--------------------------------------------------------
;                   FUNCTIONS AND SUBS
;--------------------------------------------------------
;This section defines the functions/subs that
;may be particular to a programming language
[Func Subs]
abs
accept
alarm
atan2
bind
binmode
bless
caller
chdir
chmod
chomp
chop
chown
chr
chroot
close
closedir
connect
cos
crypt
dbmclose
dbmopen
defined
delete
die
dump
each
eof
eval
exec
exists
exit
exp
fcntl
fileno
flock
fork
format
formline
getc
getlogin
getpeername
getpgrp
getppid
getpriority
getpwnam
getgrnam
gethostbyname
getnetbyname
getprotobyname
getpwuid
getgrgid
getservbyname
gethostbyaddr
getnetbyaddr
getprotobynumber
getservbyport
getpwent
getgrent
gethostent
getnetent
getprotoent
getservent
setpwent
setgrent
sethostent
setnetent
setprotoent
setservent
endpwent
endgrent
endhostent
endnetent
endprotoent
endservent
getsockname
getsockopt
glob
gmtime
grep
hex
import
index
int
ioctl
join
keys
kill
lc
lcfirst
length
link
listen
localtime
log
lstat
mkdir
msgctl
msgget
msgsnd
msgrcv
no
oct
open
opendir
ord
pack
pipe
pop
pos
print
printf
prototype
push
quotemeta
rand
read
readdir
readlink
recv
ref
rename
reset
reverse
rewinddir
rindex
rmdir
scalar
seek
seekdir
select
semctl
semget
semop
send
setpgrp
setpriority
setsockopt
shift
shmctl
shmget
shmread
shmwrite
shutdown
sin
sleep
socket
socketpair
sort
splice
split
sprintf
sqrt
srand
stat
study
substr
symlink
syscall
sysopen
sysread
sysseek
system
syswrite
tell
telldir
tie
tied
time
times
truncate
uc
ucfirst
umask
undef
unlink
unpack
untie
unshift
utime
values
vec
wait
waitpid
wantarray
warn
write
;--------------------------------------------------------
;                          KEYWORDS
;--------------------------------------------------------
;This section defines all the keywords
;associated with a programming language
[Keywords]
continue
do
else
elsif
for
foreach
goto
if
last
local
map
my
next
package
redo
require
return
sub
unless
until
use
while
STDIN
STDOUT
STDERR
ARGV
ARGVOUT
ENV
INC
SIG
TRUE
FALSE
__FILE__
__LINE__
__PACKAGE__
__END__
__DATA__
lt
gt
le
ge
eq
ne
cmp
x
not
and
or
xor
q
qq
qx
qw